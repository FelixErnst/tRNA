% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/tRNA-dotbracket.R
\docType{methods}
\name{gettRNABasePairing}
\alias{gettRNABasePairing}
\alias{gettRNALoopIDs}
\alias{getBasePairing}
\alias{gettRNABasePairing}
\alias{gettRNALoopIDs}
\alias{getLoopIDs}
\alias{gettRNABasePairing,GRanges-method}
\alias{getBasePairing}
\alias{gettRNALoopIDs,GRanges-method}
\alias{getLoopIDs}
\title{Accessing Dot Bracket annotation}
\usage{
gettRNABasePairing(x)

gettRNALoopIDs(x)

\S4method{gettRNABasePairing}{GRanges}(x)

getBasePairing(dotBracket, sequence)

\S4method{gettRNALoopIDs}{GRanges}(x)

getLoopIDs(dotBracket)
}
\arguments{
\item{x}{a GRanges object created by \code{import.tRNAscanAsGRanges} or
GRanges with equivalent information. The \code{tRNA_str} and \code{tRNA_seq} 
columns will be used for input into \code{getBasePairing}.}

\item{dotBracket}{character vectors describing a nucleotide sequence
structure in the dot bracket annotations. Valid characters are:
\code{.(\\{[><]\\})}}

\item{sequence}{optional: character vectors describing a nucleotide sequence.
The same number of sequences with the same length as the dot bracket string 
have to be used. Each nucleotide sequence has to be a character vector.
The identity of the nucleotides are not control, so in theory all letters 
can be used.}
}
\value{
\code{getBasePairing}: 
The result is a data.frame with following columns: pos, forward, reverse, chr
and base (if \code{sequence} was provided or a \code{GRanges} objects was 
used). If a position is unpaired, forward and reverse will be \code{0}, 
otherwise it will match the base paired positions.
\code{gettRNALoopIDs}, \code{getLoopIDs}: 
return a list of list of loop ids.
}
\description{
\code{getBasePairing} converts a dot bracket annotation into a
\code{data.frame}. Base pairing is indicated by corresponding numbers
in the forward and reverse columns.
}
\examples{
data("gr", package = "tRNA", envir = environment())
gettRNABasePairing(gr[1])
getBasePairing(gr[1]$tRNA_str)
gettRNALoopIDs(gr[1])
getLoopIDs(gr[1]$tRNA_str)
}
